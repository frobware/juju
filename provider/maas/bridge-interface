#!/bin/bash

set -u

SCRIPTPATH="$(cd $(dirname "${BASH_SOURCE[0]}") && pwd -P)"

: ${CP_BACKUP_INPUT_FILE_OPTIONS:=--backup=numbered}
: ${BRIDGE_PREFIX:="br-"}
: ${CHECK_PACKAGES_INSTALLED:=1}
: ${DEBUG:=0}
: ${DRYRUN:=}
: ${IFUPDOWN_VERBOSE:=}
: ${OUTPUT_FILE:=}
: ${PREFERRED_PYTHON_BINARY:=}

[ $DEBUG -eq 1 ] && set -x

if [ $CHECK_PACKAGES_INSTALLED -eq 1 ]; then
    if ! [ -x "$(command -v brctl)" ]; then
	echo 'error: brctl is not installed; please install package bridge-utils' >&2
	exit 1
    fi
    if ! [ -x "$(command -v ifenslave)" ]; then
	echo 'error: ifenslave is not installed; please install package ifenslave' >&2
	exit 1
    fi
fi

if [ $# -lt 2 ]; then
    echo "usage: ${0%%/}: <interface-file> <interface>..."
    exit 1
fi

# For ubuntu series < xenial we prefer python2 over python3 as we
# don't want to invalidate lots of testing against known cloud-image
# contents.
#
# A summary of Ubuntu releases and python inclusion in the default
# install of Ubuntu Server is as follows:
#
# 12.04 precise:  python 2 (2.7.3)
# 14.04 trusty:   python 2 (2.7.5) and python3 (3.4.0)
# 14.10 utopic:   python 2 (2.7.8) and python3 (3.4.2)
# 15.04 vivid:    python 2 (2.7.9) and python3 (3.4.3)
# 15.10 wily:     python 2 (2.7.9) and python3 (3.4.3)
# 16.04 xenial:   python 3 only (3.5.1)
#
# going forward:  python 3 only

if [ -z "$PREFERRED_PYTHON_BINARY" ]; then
    if [ -x "$(command -v python2)" ]; then
	PREFERRED_PYTHON_BINARY=/usr/bin/python2
    elif [ -x "$(command -v python3)" ]; then
	PREFERRED_PYTHON_BINARY=/usr/bin/python3
    elif [ -x "$(command -v python)" ]; then
	PREFERRED_PYTHON_BINARY=/usr/bin/python
    fi
fi

if ! [ -x "$(command -v $PREFERRED_PYTHON_BINARY)" ]; then
    echo "error: $PREFERRED_PYTHON_BINARY not executable, or not a command" >&2
    exit 1
fi

input_file="$1"; shift

if [ -z "$OUTPUT_FILE" ]; then
    OUTPUT_FILE=$(mktemp -t)
fi

trap 'rm -f "$OUTPUT_FILE"' EXIT

$PREFERRED_PYTHON_BINARY "$SCRIPTPATH/bridge-interface.py" --bridge-prefix="$BRIDGE_PREFIX" "$input_file" "$@" > "$OUTPUT_FILE"

if [ $? -ne 0 ]; then
    echo "error: failed to add bridge stanzas to $input_file"
    exit 1
fi

have_bonded_interface=0

if grep -q 'bond-' "$OUTPUT_FILE"; then
    have_bonded_interface=1
fi

# Any error from here should be immediately fatal.
set -e

if cmp -s "$input_file" "$OUTPUT_FILE"; then
    echo "nothing to bridge, or already bridged."
    exit 0
fi

$DRYRUN ifdown "$IFUPDOWN_VERBOSE" --interfaces="$input_file" "$@"

if [ $have_bonded_interface = 1 ]; then
    echo "sleeping to work around https://bugs.launchpad.net/ubuntu/+source/ifenslave/+bug/1269921"
    echo "sleeping to work around https://bugs.launchpad.net/juju/+bug/1594855"
    $DRYRUN sleep ${BOND_SLEEP_DURATION:-3}
fi

bridge_ifnames=""

for i in "$@"; do
    bridge_ifnames="$bridge_ifnames ${BRIDGE_PREFIX}${i}"
done

$DRYRUN chmod 644 "$OUTPUT_FILE"

# If the ifup fails on the new file we want to raise the existing
# interface(s) against the definitions in the old file.
set +e
$DRYRUN ifup "$IFUPDOWN_VERBOSE" --interfaces="$OUTPUT_FILE" $bridge_ifnames
set -e

if [ $? -ne 0 ]; then
    $DRYRUN ifup --force "$IFUPDOWN_VERBOSE" --interfaces="$OUTPUT_FILE" "$@"
else
    $DRYRUN cp "$CP_BACKUP_INPUT_FILE_OPTIONS" "$OUTPUT_FILE" "$input_file"
fi
